#ifndef SPHERE_H
#define SPHERE_H


#pragma once
#ifdef WIN32
	#include <glm\glm.hpp>
#else
	#include <glm/glm.hpp>
#endif
class Sphere
{
public:
	Sphere();
    Sphere(const float& x,  const float& y,  const float& z, const float& radius );
	~Sphere();
	glm::vec3 center;
	glm::vec3 radius; 
    
	//setter
	glm::vec3 setSphereCenter(const float& x, const float& y, const float& z);
	glm::vec3 setSphereRadius(const float& rad); 
    
    //functions
	float distPlaneToPoint(glm::vec3 q);
	void computePlaneNormal();
	glm::vec3 closestPointInPlane(glm::vec3 q);
	glm::vec3 entryPointSegmentPlane(glm::vec3 p, glm::vec3 q);
};



#endif // SPHERE_H
